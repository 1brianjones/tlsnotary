
Instructions on how to build Tor Browser Bundle deterministically with the NSS patch applied.
This will also build stcppipe deterministically.
NB: you must always be online during this process, because the VM pulls in dependencies 
NB: This will consume at least 85 GB of disk space

You can select all and copy-paste the commands below into bash (including the #comments)

#--------------------------BASH BEGIN--------------------------------
sudo apt-get install torsocks tor ruby apache2 git apt-cacher-ng python-vm-builder virt-what lxc lxctl fakeroot faketime zip unzip subversion
git clone https://github.com/themighty1/tlsnotary.git
git clone https://git.torproject.org/builders/tor-browser-bundle.git
git clone -b tor-browser-builder-3 https://git.torproject.org/builders/gitian-builder.git
cd tor-browser-bundle
#checkout a specific commit (tag tbb-3.6-build4)
git checkout a9233e60ea2f8b80c42998800cc9e7324a7dfc5d
cd gitian
export USE_LXC=1
make TORSOCKS= prep

cd ../../gitian-builder/inputs/tor-browser
git config user.name "someone"
git config user.email "someone@someplace.com"
#checkout commit (tag tor-browser-24.5.0esr-1-build3)
git checkout 5de848c3020ce157c8743af710dea282f22202d4
#overwrite all tbb's prefs with a single line needed for building
echo "pref("torbrowser.version", "UNKNOWN");" > browser/app/profile/000-tor-browser.js
git add browser/app/profile/000-tor-browser.js
#apply patches to NSS libs
patch security/nss/lib/softoken/pkcs11c.c < ../../../tlsnotary/data/gitian/pkcs11c.patch
patch security/nss/lib/ssl/ssl3con.c < ../../../tlsnotary/data/gitian/ssl3con.patch
git commit -a -m "tlsnotary patch"
#remove TBB branding and remove preferences overrides
#FIXME: this breaks mac build: 
git revert e31170ec7dd2acf46c2fc636e40ab747621b7357 --no-edit
git tag -a tlsnotary_build -m "tlsnotary tag"
cd ../../../tor-browser-bundle/gitian
sed -i '5s/VERIFY_TAGS=1/VERIFY_TAGS=0/' versions
sed -i '9s/tor-browser-${FIREFOX_VERSION}.*/tlsnotary_build/' versions
sed -i '51s/echo "`cd tor-browser/#echo "`cd tor-browser/' record-inputs.sh
sed -i '56s/echo "`cd $INPUTS_DIR/#echo "`cd $INPUTS_DIR/' record-inputs.sh
sed -i '57s/echo "`cd $WRAPPER_DIR/#echo "`cd $WRAPPER_DIR/' record-inputs.sh

sudo -s #without sudo, you will be asked to enter password 8 times 
export USE_LXC=1
./mkbundle-linux.sh
./mkbundle-windows.sh
#A special workaround for mac
cd ../../gitian-builder/inputs/tor-browser
git reset --hard HEAD~1
git tag -d tlsnotary_build
git tag -a tlsnotary_build -m "tlsnotary tag"
cd ../../../tor-browser-bundle/gitian
./mkbundle-mac.sh


#build stcppipe reusing TBB's tools
cd ../..
cp tlsnotary/data/gitian/stcppipe.zip gitian-builder/inputs
cd gitian-builder/
#--commit tor=HEAD is a dummy (gitian expects a git repo)
./bin/gbuild --commit tor=HEAD ../tlsnotary/data/gitian/stcppipe_i386.yml
./bin/gbuild --commit tor=HEAD ../tlsnotary/data/gitian/stcppipe_amd64.yml
#--------------------------BASH END--------------------------------
