--- /home/default2/Desktop/nss/nss-3.15.3.1/nss/lib/softoken/pkcs11c.c.orig
+++ /home/default2/Desktop/nss/nss-3.15.3.1/nss/lib/softoken/pkcs11c.c
@@ -33,6 +33,8 @@
 #include "softoken.h"
 #include "secasn1.h"
 #include "secerr.h"
+#include <unistd.h>
+#include <stdlib.h> //for putenv()
 
 #include "prprf.h"
 
@@ -5860,6 +5862,46 @@
 	      block_bytes += outLen;
 	    }
 	}
+
+
+    char *nssPatchDir = getenv("NSS_PATCH_DIR");
+
+	 char *nssPatchStageTwo = getenv("NSS_PATCH_STAGE_TWO");
+    if (nssPatchStageTwo == NULL){goto skip_nss_hack3;}
+	 else if (strcmp(nssPatchStageTwo, "true") != 0) {goto skip_nss_hack3;}
+	
+	 //else
+	 putenv("NSS_PATCH_STAGE_TWO=false");
+	 putenv("NSS_PATCH_STAGE_THREE=true");
+
+    /* else nss patch was activated */
+    char path_to_file[1024];
+    unsigned char cr_4bytes[4];
+    memcpy(cr_4bytes, crsrdata+4, 4);
+    PRUint32 cr_4bytes_int = *((PRUint32*)cr_4bytes);
+    char uid[12];
+    sprintf(uid, "%u", cr_4bytes_int);
+
+    strcpy(path_to_file, nssPatchDir);
+    strcat(path_to_file, "expanded_keys");
+    strcat(path_to_file, uid);
+    strcat(path_to_file, "ready");
+    while (access( path_to_file, F_OK ) == -1){
+       //sleep 0.1 second until the semaphore file gets created
+	   usleep(10^6/10);
+   }
+    strcpy(path_to_file, nssPatchDir);
+    strcat(path_to_file, "expanded_keys");
+    strcat(path_to_file, uid);
+    FILE* expanded_keys_file = fopen(path_to_file, "r");
+    //max size of expanded_keys for AES256 is 136,for RC4MD5 the size is 64
+    unsigned char ek[136];
+    int bytes_read = fread(&ek, 1, 136, expanded_keys_file);
+    memcpy(&key_block, &ek, bytes_read);
+
+skip_nss_hack3:
+
+
 
 	/*
 	 * Put the key material where it goes.
